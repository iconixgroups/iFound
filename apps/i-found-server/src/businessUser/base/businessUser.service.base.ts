/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BusinessUser as PrismaBusinessUser } from "@prisma/client";

export class BusinessUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BusinessUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.businessUser.count(args);
  }

  async businessUsers<T extends Prisma.BusinessUserFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessUserFindManyArgs>
  ): Promise<PrismaBusinessUser[]> {
    return this.prisma.businessUser.findMany<Prisma.BusinessUserFindManyArgs>(
      args
    );
  }
  async businessUser<T extends Prisma.BusinessUserFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessUserFindUniqueArgs>
  ): Promise<PrismaBusinessUser | null> {
    return this.prisma.businessUser.findUnique(args);
  }
  async createBusinessUser<T extends Prisma.BusinessUserCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessUserCreateArgs>
  ): Promise<PrismaBusinessUser> {
    return this.prisma.businessUser.create<T>(args);
  }
  async updateBusinessUser<T extends Prisma.BusinessUserUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessUserUpdateArgs>
  ): Promise<PrismaBusinessUser> {
    return this.prisma.businessUser.update<T>(args);
  }
  async deleteBusinessUser<T extends Prisma.BusinessUserDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessUserDeleteArgs>
  ): Promise<PrismaBusinessUser> {
    return this.prisma.businessUser.delete(args);
  }
}
