/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Offer as PrismaOffer } from "@prisma/client";

export class OfferServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OfferCountArgs, "select">): Promise<number> {
    return this.prisma.offer.count(args);
  }

  async offers<T extends Prisma.OfferFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OfferFindManyArgs>
  ): Promise<PrismaOffer[]> {
    return this.prisma.offer.findMany<Prisma.OfferFindManyArgs>(args);
  }
  async offer<T extends Prisma.OfferFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OfferFindUniqueArgs>
  ): Promise<PrismaOffer | null> {
    return this.prisma.offer.findUnique(args);
  }
  async createOffer<T extends Prisma.OfferCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OfferCreateArgs>
  ): Promise<PrismaOffer> {
    return this.prisma.offer.create<T>(args);
  }
  async updateOffer<T extends Prisma.OfferUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OfferUpdateArgs>
  ): Promise<PrismaOffer> {
    return this.prisma.offer.update<T>(args);
  }
  async deleteOffer<T extends Prisma.OfferDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OfferDeleteArgs>
  ): Promise<PrismaOffer> {
    return this.prisma.offer.delete(args);
  }
}
